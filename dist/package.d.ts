export declare const name: string;
export declare const version: string;
export declare const description: string;
export declare const author: string;
export declare const license: string;
export declare const scripts: {
    "prebuild": string;
    "build": string;
    "format": string;
    "start": string;
    "start:dev": string;
    "start:debug": string;
    "start:prod": string;
    "lint": string;
    "test": string;
    "test:watch": string;
    "test:cov": string;
    "test:debug": string;
    "test:e2e": string;
};
export declare const dependencies: {
    "@nestjs/common": string;
    "@nestjs/core": string;
    "@nestjs/jwt": string;
    "@nestjs/passport": string;
    "@nestjs/platform-express": string;
    "@nestjs/serve-static": string;
    "@nestjs/swagger": string;
    "@nestjs/typeorm": string;
    "bcryptjs": string;
    "class-transformer": string;
    "class-validator": string;
    "config": string;
    "cross-env": string;
    "hbs": string;
    "lodash": string;
    "moment": string;
    "mysql": string;
    "passport": string;
    "passport-jwt": string;
    "reflect-metadata": string;
    "rimraf": string;
    "rxjs": string;
    "swagger-ui-express": string;
    "typeorm": string;
};
export declare const devDependencies: {
    "@nestjs/cli": string;
    "@nestjs/schematics": string;
    "@nestjs/testing": string;
    "@types/bcryptjs": string;
    "@types/config": string;
    "@types/express": string;
    "@types/jest": string;
    "@types/lodash": string;
    "@types/mysql": string;
    "@types/node": string;
    "@types/passport-jwt": string;
    "@types/supertest": string;
    "jest": string;
    "prettier": string;
    "supertest": string;
    "ts-jest": string;
    "ts-loader": string;
    "ts-node": string;
    "tsconfig-paths": string;
    "tslint": string;
    "typescript": string;
};
export declare namespace jest {
    export const moduleFileExtensions: string[];
    export const rootDir: string;
    export const testRegex: string;
    export const transform: {
        "^.+\\.(t|j)s$": string;
    };
    export const coverageDirectory: string;
    export const testEnvironment: string;
}
